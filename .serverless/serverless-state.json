{
  "service": {
    "service": "my-serverless-app",
    "serviceObject": {
      "name": "my-serverless-app"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "region": "us-east-1",
      "memorySize": 128,
      "timeout": 30,
      "environment": {
        "S3_BUCKET": "data-ingestion-bucket-fintech",
        "SQS_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/783764603601/fintech-queue"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": "arn:aws:sqs:us-east-1:783764603601:fintech-queue"
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:*"
              ],
              "Resource": "arn:aws:s3:::data-ingestion-bucket-fintech/*"
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "Fileingestions3LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-app-dev-fileingestions3"
            }
          },
          "FileingestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-app-dev-fileingestion"
            }
          },
          "ApiingestionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-app-dev-apiingestion"
            }
          },
          "SendmessageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/my-serverless-app-dev-sendmessage"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "my-serverless-app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/my-serverless-app-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "my-serverless-app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "Fileingestions3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z/fileingestions3.zip"
              },
              "Handler": "dist/fileingestions3.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "my-serverless-app-dev-fileingestions3",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "S3_BUCKET": "data-ingestion-bucket-fintech",
                  "SQS_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/783764603601/fintech-queue",
                  "S3_BUCKET_NAME": "data-ingestion-bucket-fintech",
                  "S3_FILE_NAME": "data.csv"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "Fileingestions3LogGroup"
            ]
          },
          "FileingestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z/fileingestion.zip"
              },
              "Handler": "dist/fileingestion.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "my-serverless-app-dev-fileingestion",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "S3_BUCKET": "data-ingestion-bucket-fintech",
                  "SQS_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/783764603601/fintech-queue",
                  "S3_BUCKET_NAME": "data-ingestion-bucket-fintech",
                  "S3_FILE_NAME": "data.csv"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FileingestionLogGroup"
            ]
          },
          "ApiingestionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z/apiingestion.zip"
              },
              "Handler": "dist/apiingestion.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "my-serverless-app-dev-apiingestion",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "S3_BUCKET": "data-ingestion-bucket-fintech",
                  "SQS_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/783764603601/fintech-queue"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiingestionLogGroup"
            ]
          },
          "SendmessageLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z/sendmessage.zip"
              },
              "Handler": "dist/sqsproducer.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "my-serverless-app-dev-sendmessage",
              "MemorySize": 128,
              "Timeout": 30,
              "Environment": {
                "Variables": {
                  "S3_BUCKET": "data-ingestion-bucket-fintech",
                  "SQS_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/783764603601/fintech-queue"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SendmessageLogGroup"
            ]
          },
          "Fileingestions3LambdaVersionHTfFDMXA0tJcxrHP8NnnJ88uyf9ZVGYsVAXTPlhSWk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "Fileingestions3LambdaFunction"
              },
              "CodeSha256": "k1AQ++uq1v3X1cZsXhlz39Kc7s1ZHVPPuplzo4jXto4="
            }
          },
          "ApiingestionLambdaVersionXXrdUCu4FRdZmrls2DeBnsE7FgGH1Q5vK0tFRuv0Z4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiingestionLambdaFunction"
              },
              "CodeSha256": "oXz45bQwzuKuAzAsL9FXRmKD59wF+GEWjHCaxW3zszQ="
            }
          },
          "SendmessageLambdaVersionxyUDSRkVK4nhf6oYOjNoLAHGseY6YJMu8NDralcw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendmessageLambdaFunction"
              },
              "CodeSha256": "0Au+YlVGEXnDdoDhXGnG4C9wmCQKaaxE3Sa7PSfqbUk="
            }
          },
          "FileingestionLambdaVersionCRYvzKdwnBz4x0P9xJFLagzlIJPf0Mp1V7IoCeK9O4Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FileingestionLambdaFunction"
              },
              "CodeSha256": "FBjBORt5mrnhdVrKE+lDgvrsWVCekOVsb22vtkBBJrE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-my-serverless-app",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFileingestions3": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fileingestions3",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFileingestion": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fileingestion",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceApiingestion": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "apiingestion",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSendmessage": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "sendmessage",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFileingestions3Post": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFileingestions3"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "Fileingestions3LambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "Fileingestions3LambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFileingestionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFileingestion"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FileingestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FileingestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodApiingestionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceApiingestion"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ApiingestionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ApiingestionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSendmessagePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSendmessage"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SendmessageLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SendmessageLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1739764473457": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFileingestions3Post",
              "ApiGatewayMethodFileingestionPost",
              "ApiGatewayMethodApiingestionPost",
              "ApiGatewayMethodSendmessagePost"
            ]
          },
          "Fileingestions3LambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "Fileingestions3LambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FileingestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FileingestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ApiingestionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiingestionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SendmessageLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendmessageLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DataQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "my-data-queue"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-ServerlessDeploymentBucketName"
            }
          },
          "Fileingestions3LambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "Fileingestions3LambdaVersionHTfFDMXA0tJcxrHP8NnnJ88uyf9ZVGYsVAXTPlhSWk"
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-Fileingestions3LambdaFunctionQualifiedArn"
            }
          },
          "ApiingestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiingestionLambdaVersionXXrdUCu4FRdZmrls2DeBnsE7FgGH1Q5vK0tFRuv0Z4"
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-ApiingestionLambdaFunctionQualifiedArn"
            }
          },
          "SendmessageLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendmessageLambdaVersionxyUDSRkVK4nhf6oYOjNoLAHGseY6YJMu8NDralcw"
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-SendmessageLambdaFunctionQualifiedArn"
            }
          },
          "FileingestionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FileingestionLambdaVersionCRYvzKdwnBz4x0P9xJFLagzlIJPf0Mp1V7IoCeK9O4Y"
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-FileingestionLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-my-serverless-app-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "fileingestions3": {
        "handler": "dist/fileingestions3.handler",
        "environment": {
          "S3_BUCKET_NAME": "data-ingestion-bucket-fintech",
          "S3_FILE_NAME": "data.csv"
        },
        "events": [
          {
            "http": {
              "path": "fileingestions3",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "patterns": [
            "dist/fileingestions3.js",
            "dist/utils/**"
          ],
          "artifact": "D:\\Dipali-work\\fintech\\.serverless\\fileingestions3.zip"
        },
        "name": "my-serverless-app-dev-fileingestions3",
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "Fileingestions3LambdaVersionHTfFDMXA0tJcxrHP8NnnJ88uyf9ZVGYsVAXTPlhSWk"
      },
      "fileingestion": {
        "handler": "dist/fileingestion.handler",
        "environment": {
          "S3_BUCKET_NAME": "data-ingestion-bucket-fintech",
          "S3_FILE_NAME": "data.csv"
        },
        "events": [
          {
            "http": {
              "path": "fileingestion",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "patterns": [
            "dist/fileingestion.js",
            "dist/utils/**"
          ],
          "artifact": "D:\\Dipali-work\\fintech\\.serverless\\fileingestion.zip"
        },
        "name": "my-serverless-app-dev-fileingestion",
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "FileingestionLambdaVersionCRYvzKdwnBz4x0P9xJFLagzlIJPf0Mp1V7IoCeK9O4Y"
      },
      "apiingestion": {
        "handler": "dist/apiingestion.handler",
        "events": [
          {
            "http": {
              "path": "apiingestion",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "patterns": [
            "dist/apiingestion.js",
            "dist/utils/**"
          ],
          "artifact": "D:\\Dipali-work\\fintech\\.serverless\\apiingestion.zip"
        },
        "name": "my-serverless-app-dev-apiingestion",
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ApiingestionLambdaVersionXXrdUCu4FRdZmrls2DeBnsE7FgGH1Q5vK0tFRuv0Z4"
      },
      "sendmessage": {
        "handler": "dist/sqsproducer.handler",
        "events": [
          {
            "http": {
              "path": "sendmessage",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "package": {
          "patterns": [
            "dist/sqsproducer.js",
            "dist/utils/**"
          ],
          "artifact": "D:\\Dipali-work\\fintech\\.serverless\\sendmessage.zip"
        },
        "name": "my-serverless-app-dev-sendmessage",
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "SendmessageLambdaVersionxyUDSRkVK4nhf6oYOjNoLAHGseY6YJMu8NDralcw"
      }
    },
    "resources": {
      "Resources": {
        "DataQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "my-data-queue"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "my-serverless-app",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!src/**",
          "!dist/**"
        ],
        "artifactsS3KeyDirname": "serverless/my-serverless-app/dev/code-artifacts",
        "artifactDirectoryName": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/my-serverless-app/dev/1739764545083-2025-02-17T03:55:45.083Z",
    "artifact": ""
  }
}